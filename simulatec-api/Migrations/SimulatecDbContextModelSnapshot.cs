// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using simulatec_api_app.Data;

#nullable disable

namespace simulatec_api_app.Migrations
{
    [DbContext(typeof(SimulatecDbContext))]
    partial class SimulatecDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("simulatec_api_app.Models.Acesso", b =>
                {
                    b.Property<string>("Usuario")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("usuario");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("senha");

                    b.HasKey("Usuario")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Usuario" }, "usuario")
                        .IsUnique();

                    b.ToTable("acessos", (string)null);
                });

            modelBuilder.Entity("simulatec_api_app.Models.Pessoa", b =>
                {
                    b.Property<string>("Usuario")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("usuario");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("date")
                        .HasColumnName("nascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("telefone");

                    b.Property<string>("Validacao")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("validacao");

                    b.HasKey("Usuario")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Cpf" }, "cpf")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.HasIndex(new[] { "Usuario" }, "usuario")
                        .IsUnique()
                        .HasDatabaseName("usuario1");

                    b.HasIndex(new[] { "Validacao" }, "validacao")
                        .IsUnique();

                    b.ToTable("pessoas", (string)null);
                });

            modelBuilder.Entity("simulatec_api_app.Models.Simulado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("area");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ativo");

                    b.Property<string>("Correta")
                        .HasColumnType("text")
                        .HasColumnName("correta");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("curso");

                    b.Property<int>("Dificuldade")
                        .HasColumnType("int")
                        .HasColumnName("dificuldade");

                    b.Property<string>("Instituicao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("instituicao");

                    b.Property<string>("Questao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("questao");

                    b.Property<string>("RespostaA")
                        .HasColumnType("text")
                        .HasColumnName("resposta_a");

                    b.Property<string>("RespostaB")
                        .HasColumnType("text")
                        .HasColumnName("resposta_b");

                    b.Property<string>("RespostaC")
                        .HasColumnType("text")
                        .HasColumnName("resposta_c");

                    b.Property<string>("RespostaD")
                        .HasColumnType("text")
                        .HasColumnName("resposta_d");

                    b.Property<string>("RespostaE")
                        .HasColumnType("text")
                        .HasColumnName("resposta_e");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id")
                        .IsUnique();

                    b.ToTable("simulados", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
